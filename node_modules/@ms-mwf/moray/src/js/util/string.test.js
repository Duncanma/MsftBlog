import StringUtil from './string';

describe('interpolateString()', () => {
  const template = 'The %{speed} %{color} fox jumped over the lazy %{animal}.';
  const data = {
    speed: 'quick',
    color: 'brown',
    animal: 'dog'
  };

  it('should correctly interpolate a string if provided the expected data', () => {
    const result = 'The quick brown fox jumped over the lazy dog.';
    expect(StringUtil.interpolateString(template, data)).toEqual(result);
  });

  it('should allow for an empty string as a value', () => {
    data.animal = '';
    const result = 'The quick brown fox jumped over the lazy .';
    expect(StringUtil.interpolateString(template, data)).toEqual(result);
  });

  /* eslint-disable no-console */
  it('should remove the placeholder from the string if data is not found and emit a console warning', () => {
    console.warn = jest.fn();
    delete data.animal;
    const result = 'The quick brown fox jumped over the lazy .';
    expect(StringUtil.interpolateString(template, data)).toEqual(result);
    expect(console.warn).toHaveBeenCalledWith(
      'Template error, %{animal} not found:',
      'The %{speed} %{color} fox jumped over the lazy %{animal}.'
    );
  });
});
