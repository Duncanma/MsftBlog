import InitializationUtil from './initialization';

export const EventName = {
  ON_REMOVE: 'onRemove'
};

const focusControls = [];

/**
 * Class representing Focus Controls.
 * Solve for Firefox bug where following on-page anchor links loses focus:
 * https://bugzilla.mozilla.org/show_bug.cgi?id=308064
 * https://bugzilla.mozilla.org/show_bug.cgi?id=277178
 */
class FocusControls {
  /**
   * Initialize focus controls.
   * @param {Object} opts - The focus control options.
   * @param {Node} opts.el - The anchor element node, must have href attribute with fragment identifier.
   */
  constructor(opts) {
    this.el = opts.el;
    this.target = document.querySelector(this.el.getAttribute('href'));
    this.events = [{
      el: this.el,
      type: 'click',
      handler: e => {
        this.onClick(e);
      }
    }];

    // Add event handlers.
    InitializationUtil.addEvents(this.events);

    focusControls.push(this);
  }

  /**
   * Click event.
   * @param {Event} e - The event object.
   */
  onClick(e) {
    e.preventDefault();
    this.target.focus();
  }

  /**
   * Remove the focus controls and events.
   */
  remove() {
    // Remove event handlers
    InitializationUtil.removeEvents(this.events);

    // Remove this focus controls reference from array of instances
    const index = focusControls.indexOf(this);
    focusControls.splice(index, 1);

    // Create and dispatch custom event
    this[EventName.ON_REMOVE] = new CustomEvent(EventName.ON_REMOVE, { bubbles: true });
    this.el.dispatchEvent(this[EventName.ON_REMOVE]);
  }

  /**
   * Get an array of focus controls instances.
   * @returns {Object[]} Array of focus controls instances.
   */
  static getInstances() {
    return focusControls;
  }
}

export default FocusControls;
