import ColorUtil from './color';

describe('getRGB()', () => {
  it('returns an empty object if string is invalid', () => {
    const result = ColorUtil.getRGB('rga(1, 2, 3456)');

    expect(result).toEqual({});
  });

  it('returns an object for rgb notation if string is valid', () => {
    const result = ColorUtil.getRGB('rgb(0,150,255)');

    expect(result).toEqual({ r: '0', g: '150', b: '255' });
  });

  it('returns the proper rgb values on a valid string', () => {
    const result = ColorUtil.getRGB('rgb(125,75,205)');
    const { r, g, b } = result;

    expect(r).toEqual('125');
    expect(g).toEqual('75');
    expect(b).toEqual('205');
  });
});

describe('getYiq()', () => {
  it('returns a YIQ value for an rgb object', () => {
    const rgbObject = { r: '155', g: '200', b: '75' };
    const result = ColorUtil.getYiq(rgbObject);

    expect(result).toEqual(172.295);
  });
});
