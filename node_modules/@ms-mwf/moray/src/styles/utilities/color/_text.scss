// stylelint-disable declaration-no-important

//
// Text colors
//

// Create placeholders to be referenced
@each $shade, $hex in $grays {
  %text-gray-#{$shade} {
    @include text-emphasis-variant($hex);
  }
}

@each $name, $hex in $mwf-colors {
  %text-#{$name} {
    @include text-emphasis-variant($hex);
  }
}

@each $shade, $hex in $grays {
  .text-gray-#{$shade} {
    @extend %text-gray-#{$shade};
  }
}

@each $name, $hex in $mwf-colors {
  .text-#{$name} {
    @extend %text-#{$name};
  }
}

// Define classes to use placeholders
@each $name, $hex in $mwf-theme-neutrals {
  .text-neutral-#{$name} {
    @include extend-color-variant($hex, "text");

    @include theme-inverse {
      @include extend-color-variant(mwf-theme-color($theme-inverse, $name), "text");
    }
  }
}

@each $name, $hex in $mwf-theme-colors {
  .text-#{$name} {
    @include extend-color-variant($hex, "text");

    @include theme-inverse {
      @include extend-color-variant(mwf-theme-color($theme-inverse, $name), "text");
    }
  }
}

// Contextual colors

.text-body {
  color: $body-color !important;

  @include theme-inverse {
    color: $body-color-inverse !important;
  }
}

.text-muted {
  color: $text-muted !important;

  @include theme-inverse {
    color: $text-muted-inverse !important;
  }
}

.text-black-50 { color: rgba($black, 0.5) !important; }
.text-white-50 { color: rgba($white, 0.5) !important; }

// Reset color

.text-reset { color: inherit !important; }
