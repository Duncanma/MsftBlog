// stylelint-disable declaration-no-important

// Height

@each $size, $length in $sizes {
  .h-#{$size} { height: $length !important; }
}

// Width

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    // Width using columns
    @each $twelfth, $percent in $widths {
      // Define style placeholder to be used below AND in following "sizes" loop
      %w#{$infix}-col-#{$twelfth} { width: $percent !important; }

      .w#{$infix}-col-#{$twelfth} {
        @extend %w#{$infix}-col-#{$twelfth};
      }
    }

    // Width using "sizes" - analogous to Height utils
    @each $size, $length in $sizes {
      // If this "length" value is also found in the `$widths` map used by the above
      // column classes, @extend the appropriate column class to reduce duplication
      $column: get-key-by-value($widths, $length);

      .w#{$infix}-#{$size} {
        @if $column {
          @extend %w#{$infix}-col-#{$column};
        } @else {
          width: $length !important;
        }
      }
    }
  }
}

.mw-100 { max-width: 100% !important; }
.mh-100 { max-height: 100% !important; }

// Additional Width / Height helpers

.min-vw-100 { min-width: 100vw !important; }
.min-vh-100 { min-height: 100vh !important; }

.vw-100 { width: 100vw !important; }
.vh-100 { height: 100vh !important; }
