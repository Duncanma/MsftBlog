@import "mixins";

// Default materials
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .material#{$infix}-surface {
      @include material-color-variant(mwf-theme-color($theme-default, "surface"));

      @include theme-inverse {
        @include material-color-variant(mwf-theme-color($theme-inverse, "surface"));
      }
    }

    .material#{$infix}-card {
      @include material-color-variant(mwf-theme-color($theme-default, "card"));
      box-shadow: $depth-8;

      @include theme-inverse {
        @include material-color-variant(mwf-theme-color($theme-inverse, "card"));
      }
    }

    .material#{$infix}-backdrop {
      @include material-color-variant(mwf-theme-color($theme-default, "body"));

      @include theme-inverse {
        @include material-color-variant(mwf-theme-color($theme-inverse, "body"));
      }
    }
  }
}

@each $name, $hex in $mwf-colors {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    %material#{$infix}-color-#{$name} {
      @include media-breakpoint-up($breakpoint) {
        @include material-color-variant($hex);
      }
    }
  }
}

@each $shade, $hex in $grays {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    %material#{$infix}-color-gray-#{$shade} {
      @include media-breakpoint-up($breakpoint) {
        @include material-color-variant($hex);
      }
    }
  }
}

// Theme colors
@each $name, $hex in $mwf-theme-colors {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .material#{$infix}-color-#{$name} {
      // If it's a "light" or "dark" shade of a theme color, ex. "brand-dark"
      // pick the opposite shade of the same theme color if it exists, ex. "brand-light"
      $link-color: theme-color-opposite($name);
      @if ($link-color) {
        @include material-color-variant($hex, $link-color);
      } @else {
        @include extend-themed-variant($name, $hex, "material#{$infix}-color");
      }
    }
  }
}

// Theme neutrals
@each $name, $hex in $mwf-theme-neutrals {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .material#{$infix}-color-neutral-#{$name} {
      @include extend-themed-variant($name, $hex, "material#{$infix}-color");
    }
  }
}
