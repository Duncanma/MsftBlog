@function fibonacci-sum-rem($count, $start) {
  $fib: 0 0.0625; //Array of fibonacci numbers in rem
  @for $count from 1 through $count {
    $new: nth($fib, length($fib)) + nth($fib, length($fib) - 1);
    $fib: append($fib, $new);
  }

  $total: $start;
  @while $count > 0 {
    $total: $total + nth($fib, $count + 1);
    $count: $count - 1;
  }
  @return $total + rem;
}

@function calc-heading-margin($count) {
  $m: ($count - 1) * $headings-margin-multiplier;

  @if ($m < strip-unit($headings-margin-bottom)) {
    @return $headings-margin-bottom;
  } @else {
    @return $m + rem;
  }
}

@mixin responsive-heading($count) {
  font-size: fibonacci-sum-rem($count, $headings-size-base-rem);
  margin-bottom: calc-heading-margin($count);

  @include media-breakpoint-up(lg) {
    font-size: fibonacci-sum-rem($count + 1, $headings-size-base-rem);
    margin-bottom: calc-heading-margin($count + 1);
  }

  @include media-breakpoint-up(xl) {
    font-size: fibonacci-sum-rem($count + 2, $headings-size-base-rem);
    margin-bottom: calc-heading-margin($count + 2);
  }
}

@mixin fib-headings() {
  $heading: 6 + $headings-display-count;
  $count: 0;

  @while $heading > 0 {
    @if $heading > $headings-display-count {
      h#{$heading - $headings-display-count},
      .h#{$heading - $headings-display-count} {
        @include responsive-heading($count);
      }
    } @else {
      .display-#{$heading} {
        @include responsive-heading($count);
      }
    }

    $count: $count + 1;
    $heading: $heading - 1;
  }
}
