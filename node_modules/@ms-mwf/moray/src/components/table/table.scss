@import "../../styles/functions";
@import "../../variables";
@import "../../styles/mixins";
@import "mixins";

//
// Basic table
//

.table {
  width: 100%;
  margin-bottom: $spacer;
  background-color: $table-bg; // Reset for nesting within parents with `background-color`.
  border-top: 0 solid $table-outer-border-color;
  border-bottom: $table-border-width solid $table-outer-border-color;

  caption {
    caption-side: bottom;
  }

  th {
    font-weight: $font-weight-semibold;
  }

  th,
  td {
    padding: $table-cell-padding $table-cell-padding / 2;
    vertical-align: top;
    border-bottom: $table-border-width solid $table-inner-border-color;
    overflow-wrap: break-word;
    word-wrap: break-word; // IE non-standard property name
  }

  thead th {
    vertical-align: bottom;
    border-bottom-color: $table-outer-border-color;
  }

  tbody + tbody {
    border-top: (2 * $table-border-width) solid $table-border-color;
  }

  .table {
    background-color: $body-bg;
  }

  tr > :first-child {
    padding-left: $table-cell-padding;
  }

  tr > :last-child {
    padding-right: $table-cell-padding;
  }

  th ul:first-child,
  td ul:first-child,
  th p:first-child,
  td p:first-child {
    margin-top: 0;
    padding-top: 0;
  }

  th ul:last-child,
  td ul:last-child,
  th p:last-child,
  td p:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
  }

  tr:last-child th,
  tr:last-child td {
    border-bottom-color: $table-outer-border-color;
  }

  @include media-breakpoint-down(xs) {
    th,
    td {
      padding: $table-cell-padding / 2;
    }
  }
}

//
// Table with fixed layout
//

.table-fixed {
  table-layout: fixed;
}

//
// Condensed table w/ half padding
//

.table-sm {
  th,
  td {
    padding-top: $table-cell-padding-sm;
    padding-bottom: $table-cell-padding-sm;
  }
}

//
// Table with larger headers
//

.table-lg-headers {
  $header-size-increase: $headings-size-base-rem - 1rem;
  th {
    font-size: 1 + 2 * $header-size-increase;
    line-height: 1.2;
  }

  @media (min-width: map-get($map: $grid-breakpoints, $key: lg)) {
    th {
      font-size: 1 + 3 * $header-size-increase;
    }
  }

  @media (min-width: map-get($map: $grid-breakpoints, $key: xl)) {
    th {
      font-size: 1 + 5 * $header-size-increase;
    }
  }
}

// Border versions
//
// Add or remove borders all around the table and between all the columns.

.table-bordered {
  border: $table-border-width solid $table-outer-border-color;

  th,
  td {
    border-left: $table-border-width solid $table-inner-border-color;
    border-right: $table-border-width solid $table-inner-border-color;
  }

  th:first-child,
  td:first-child {
    border-left: none;
  }

  th:last-child,
  td:last-child {
    border-right: none;
  }
}

.table-borderless {
  border: 0;

  th,
  td,
  thead th,
  tbody + tbody {
    border: 0;
  }
}

// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  tbody tr:nth-of-type(#{$table-striped-order}) {
    background-color: $table-highlight-bg;
  }
}

// Table backgrounds
//
// Exact selectors below required to override `.table-striped` and prevent
// inheritance to nested tables.

@each $color, $value in $mwf-theme-colors {
  @if $value {
    @include table-row-variant($color, theme-color-level($color, -9));
  }
}

@include table-row-variant(active, $table-highlight-bg);


// stylelint-disable-next-line no-duplicate-selectors
.table {
  .thead-highlight {
    th {
      color: $table-head-text-color;
      background-color: $table-highlight-bg;
      border-color: $table-border-color;
    }
  }
}

// First column highlight
//
// Adds faint background color to first column
.table-first-col-highlight {
  :not(thead) > tr > th {
    background-color: $table-highlight-bg;
  }
}

// Caption on top
//
// Moves <caption> to top of table
.table-caption-top {
  caption {
    caption-side: top;
  }
}

// Presentational tables
//
// Adjust border style for when thead is missing
.table[role="presentation"] {
  border-width: $table-border-width;
}

// Responsive tables
//
// Generate series of `.table-responsive-*` classes for configuring the screen
// size of where your table will overflow.

.table-responsive {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        -ms-overflow-style: -ms-autohiding-scrollbar; // See https://github.com/twbs/bootstrap/pull/10057

        // Prevent double border on horizontal scroll due to use of `display: block;`
        > .table-bordered {
          border: 0;
        }
      }
    }
  }
}
