@import "../../styles/functions";
@import "../../variables";
@import "../../styles/mixins";
@import "mixins";

//
// Accessibility
//

.tab-group,
.tab-arrows {
  // allow all tabs/arrows to be focusable (even tabindex="-1")
  [tabindex]:focus {
    /* stylelint-disable-next-line declaration-no-important */
    outline: $vfi-outline-width $vfi-outline-style currentColor !important;
    z-index: 2;
  }
}

// Tab Panels
//
// Hide tabbable panes to start, show them when `.active`
// .tab-content is an older alias, likely still in use

.tab-content,
.tab-panel-group {
  margin-top: $tab-panel-group-margin-top;

  > .tab-pane,
  > .tab-panel {
    // .tab-pane is an older alias, likely still in use
    display: none;
  }
  > .active {
    display: block;
  }
}

//
// Tab List
//

.tab-overflow {
  overflow-x: scroll;
  overflow-y: hidden;
  scrollbar-width: none;
  -ms-overflow-style: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

.tab-group {
  display: flex;
  flex-wrap: nowrap;
  position: relative;

  @include horizontal-tabs {
    border-bottom-width: $tab-border-width;
    border-bottom-style: solid;
    border-color: $tab-text-default-color;
    padding-top: $vfi-outline-width;

    @include theme-inverse {
      border-color: $tab-text-default-color-inverse;
    }
  }

  a,
  button {
    flex: 0 0 auto;
  }

  a:not(.tab-image),
  button:not(.tab-image) {
    background: $tab-bg-default-color;
    color: $tab-text-default-color;
    border-style: solid;
    border-width: $tab-border-width;
    font-weight: $font-weight-semibold;
    text-decoration: none;

    @include horizontal-tabs {
      border-top-left-radius: $tab-border-radius;
      border-top-right-radius: $tab-border-radius;
      border-bottom: none;
      padding: $tab-padding-y $tab-padding-x;

      @include ltr {
        &:not(:first-child) {
          margin-left: -$tab-border-width;
        }
      }
      @include rtl {
        &:not(:last-child) {
          margin-left: -$tab-border-width;
        }
      }
    }

    &:not(.active) {
      border-color: $tab-border-default-color;
      transition: all $tab-hover-duration ease-in-out;

      @include horizontal-tabs {
        margin-top: $tab-margin-y;
      }

      &:hover,
      &:focus {
        color: $tab-text-default-active-color;

        @include horizontal-tabs {
          margin-top: 0;
          padding-top: $tab-text-active-padding-y;
        }
      }
    }

    // style tab VFI inset like buttons
    &:focus {
      outline-offset: $vfi-outline-inset;
    }
  }

  .glyph-prepend::before {
    vertical-align: text-bottom;
  }

  .active:not(.tab-image) {
    background: $tab-bg-default-active-color;
    border-color: $tab-text-default-color;
    color: $tab-text-default-active-color;
    z-index: 1;

    @include horizontal-tabs {
      padding-top: $tab-text-active-padding-y;
      margin-bottom: -$tab-border-width;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background: $black;
      border-color: $white;
      color: $white;
    }

    @media screen and (-ms-high-contrast: white-on-black) {
      background: $white;
      border-color: $black;
      color: $black;
    }
  }

  //
  // Dual theme support
  //

  @include theme-inverse {
    a:not(.tab-image),
    button:not(.tab-image) {
      background: $tab-bg-default-color-inverse;
      color: $tab-text-default-color-inverse;

      &:not(.active) {
        border-color: $tab-text-default-color-inverse;

        &:hover,
        &:focus {
          color: $tab-text-default-active-color-inverse;
        }
      }
    }

    .active {
      background: $tab-bg-default-active-color-inverse;
      border-color: $tab-text-default-color-inverse;
      color: $tab-text-default-active-color-inverse;
    }
  }
}

//
// Tab Primary Color
//

.tab-primary {
  .tab-group {
    border-color: $tab-primary-default-color;

    // stylelint-disable selector-no-qualifying-type
    a:not(.tab-image),
    button:not(.tab-image) {
      color: $tab-primary-default-color;

      &:not(.active) {
        border-color: $tab-bg-primary-hover-color;
        background: $tab-bg-primary-default-color;
      }

      &.active {
        border-color: $tab-primary-default-color;
      }
    }

    //
    // Dual theme support
    //

    @include theme-inverse {
      border-color: $tab-primary-default-color-inverse;

      a:not(.tab-image),
      button:not(.tab-image) {
        border-color: $tab-bg-primary-hover-color-inverse;
        color: $tab-primary-default-color-inverse;

        &:not(.active) {
          background: $tab-bg-primary-default-color-inverse;
        }

        &.active {
          border-color: $tab-primary-default-color-inverse;
        }
      }
    }
    // stylelint-enable selector-no-qualifying-type
  }
}

//
// Tab Slider Arrows
//

.tab-arrows {
  display: none;

  .arrow-prev,
  .arrow-next {
    color: $tab-text-default-active-color;
    position: absolute;
    height: calc(100% - (#{$vfi-outline-width} + #{$tab-border-width})); // account for top VFI and bottom border
    top: $vfi-outline-width;
    padding: $tab-padding-x $tab-arrow-padding-x $tab-padding-y $tab-arrow-padding-x;
    border: none;
    transition: all $tab-hover-duration ease-in-out;
    z-index: 2;

    &::after {
      font-family: $font-family-glyph;
      font-size: $glyph-size-medium;
      @include transition($transition-transform);
      color: inherit;
    }
  }

  .arrow-prev {
    left: $tab-padding-x;
    background: linear-gradient(to right, $tab-bg-default-active-color 75%, rgba($tab-bg-default-active-color, 0));

    &::after {
      content: map-get($glyphs, "chevron-left");
    }

    &:hover,
    &:focus {
      transform: translate(-0.25rem, 0);
    }
  }

  .arrow-next {
    background: linear-gradient(to left, $tab-bg-default-active-color 75%, rgba($tab-bg-default-active-color, 0));
    right: $tab-padding-x;

    &::after {
      content: map-get($glyphs, "chevron-right");
    }

    &:hover,
    &:focus {
      transform: translate(0.25rem, 0);
    }
  }

  &.mobile-arrows {
    .arrow-prev {
      background: linear-gradient(to right, $tab-bg-default-active-color 5%, rgba($tab-bg-default-active-color, 0));
    }

    .arrow-next {
      background: linear-gradient(to left, $tab-bg-default-active-color 5%, rgba($tab-bg-default-active-color, 0));
    }

    .arrow-prev,
    .arrow-next {
      pointer-events: none;
      &::after {
        color: transparent;
      }
    }
  }

  //
  // Dual theme support
  //

  @include theme-inverse {
    .arrow-prev,
    .arrow-next {
      color: $tab-text-default-active-color-inverse;
    }

    .arrow-prev {
      background: linear-gradient(to right, $tab-bg-default-active-color-inverse 75%, rgba($tab-bg-default-active-color-inverse, 0));

      &.mobile-arrows {
        background: linear-gradient(to right, $tab-bg-default-active-color-inverse 5%, rgba($tab-bg-default-active-color-inverse, 0));
      }
    }

    .arrow-next {
      background: linear-gradient(to left, $tab-bg-default-active-color-inverse 75%, rgba($tab-bg-default-active-color-inverse, 0));

      &.mobile-arrows {
        background: linear-gradient(to left, $tab-bg-default-active-color-inverse 5%, rgba($tab-bg-default-active-color-inverse, 0));
      }
    }
  }
}

// chevron size modifier
.tab-arrows-lg {
  .arrow-prev,
  .arrow-next {
    padding: $tab-arrow-padding-lg;

    &::after {
      font-size: $glyph-size-large;
    }
  }
}
