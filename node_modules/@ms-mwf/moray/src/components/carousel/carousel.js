import CarouselControls, { Selector } from './carousel-controls.js';

const carousels = [];

/**
 * Class representing a carousel.
 */
class Carousel {
  /**
   * Create the carousel.
   * @param {Object} opts - The carousel options.
   * @param {Node} opts.el - The carousel DOM node.
   */
  constructor(opts) {
    this.el = opts.el;
    this.controls = new CarouselControls({
      slides: opts.el.querySelectorAll(Selector.ITEM),
      ...opts
    });

    carousels.push(this);
  }

  /**
   * Remove the carousel.
   */
  remove() {
    // remove any references from controls
    this.controls.remove();
    delete this.controls;

    // remove this carousel reference from array of instances
    const index = carousels.indexOf(this);
    carousels.splice(index, 1);
  }

  /**
   * Update the carousel.
   */
  update(opts = {}) {
    this.controls.update(opts);
  }

  /**
   * Get an array of carousel instances.
   * @returns {Object[]} Array of carousel instances.
   */
  static getInstances() {
    return carousels;
  }
}

export { Selector } from './carousel-controls.js';
export default Carousel;
