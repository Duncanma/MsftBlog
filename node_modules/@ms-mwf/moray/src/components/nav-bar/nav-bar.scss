@import "../../styles/functions";
@import "../../variables";
@import "../../styles/mixins";

// Contents
//
// Nav bar
// Nav bar brand
// Nav bar divider
// Nav bar nav
// Nav bar text
// Nav bar themes
// Responsive nav bar


// Nav bar
//
// Provide a static nav bar from which we expand to create full-width, fixed, and
// other nav bar variations.

.nav-bar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: stretch;
  justify-content: space-between; // space out brand from logo
  line-height: $nav-bar-nav-link-line-height; // set to 1 for lining up different sized text baselines and images
  min-height: $nav-bar-min-height;
  z-index: $zindex-sticky;
  width: 100%;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
  > .container,
  > .container-fluid {
    display: flex;
    flex-wrap: wrap;
    align-items: stretch;
    justify-content: space-between;
  }

  // .nav and .nav-bar-nav lists in .nav-bar wrappers don't have negative margins because the .nav-links don't wrap
  // as inline-blocks, so we can elminiate the overflow:hidden style that interferes with flyouts
  .nav-container {
    overflow-x: unset;
  }

  // Nav bar nav
  //
  // Custom nav bar navigation (doesn't require `.nav`, but does make use of `.nav-link`).
  // stylelint-disable selector-max-class
  .nav-bar-nav,
  .nav {
    display: flex;
    flex-direction: column;
    padding: 0;
    margin-bottom: 0;
    list-style: none;

    .nav-link,
    .nav-item {
      &::before {
        display: none; // Don't display on mobile collapsible menu
        bottom: fry-position($nav-bar-nav-link-padding-y, $nav-bar-nav-link-line-height);
        padding: 0 $nav-bar-nav-link-padding-x;
      }
    }

    .nav-link {
      color: inherit;
      font-weight: $nav-bar-nav-link-font-weight;
      line-height: $nav-bar-nav-link-line-height;
      padding: $nav-bar-nav-link-padding-y $nav-bar-nav-link-padding-x;
      display: block;

      &:focus {
        @include vfi-text-color-inset;
      }

      &.dropdown-toggle {
        @include ltr {
          padding-right: calc(#{$nav-bar-nav-link-padding-x} + #{$nav-bar-dropdown-caret-font-size + $nav-bar-dropdown-caret-spacing});
        }
        @include rtl {
          padding-left: calc(#{$nav-bar-nav-link-padding-x} + #{$nav-bar-dropdown-caret-font-size + $nav-bar-dropdown-caret-spacing});
        }

        &::after {
          @include ltr {
            right: $nav-bar-nav-link-padding-x;
          }
          @include rtl {
            left: $nav-bar-nav-link-padding-x;
          }
        }
      }
    }

    .nav-item {
      color: inherit;

      &.active {
        .nav-link {
          color: inherit;
        }
      }
    }

    .dropdown-menu {
      position: static;
      float: none;
      // stylelint-disable-next-line declaration-no-important
      transform: none !important; // override Dropdown inline transform style since it's now statically positoned
    }
  }
}
// stylelint-enable selector-max-class

// Nav bar brand
//
// Used for brand, project, or site names.
.nav-bar-brand {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  height: $nav-bar-min-height;
  padding: 0 $nav-bar-brand-padding-x;
  font-size: $nav-bar-brand-font-size;
  text-decoration: none;

  &:focus {
    @include vfi-text-color-inset;
  }
}

.nav-bar-divider-prepend::before,
.nav-bar-divider-append::after {
  content: "";
  display: none; // Don't display on mobile
  position: absolute;
  width: $nav-bar-divider-width;
  height: 50%;
  top: 25%;
}

.nav-bar-divider-prepend {
  position: relative;

  @include ltr {
    margin-left: $nav-bar-brand-padding-x * 2 + $nav-bar-divider-width;
  }
  @include rtl {
    margin-right: $nav-bar-brand-padding-x * 2 + $nav-bar-divider-width;
  }

  &::before {
    @include ltr {
      left: -$nav-bar-brand-padding-x - $nav-bar-divider-width;
    }
    @include rtl {
      right: -$nav-bar-brand-padding-x - $nav-bar-divider-width;
    }
  }
}

.nav-bar-divider-append {
  position: relative;

  @include ltr {
    margin-right: $nav-bar-brand-padding-x * 2 + $nav-bar-divider-width;
  }
  @include rtl {
    margin-left: $nav-bar-brand-padding-x * 2 + $nav-bar-divider-width;
  }

  &::after {
    @include ltr {
      right: -$nav-bar-brand-padding-x - $nav-bar-divider-width;
    }
    @include rtl {
      left: -$nav-bar-brand-padding-x - $nav-bar-divider-width;
    }
  }
}

// Nav bar text
//
//

.nav-bar-text {
  display: inline-block;
  padding-top: $nav-link-padding-y;
  padding-bottom: $nav-link-padding-y;
}


// Nav bar themes
//
// Styles for switching between nav bars with light or dark background.

// Dark links against a light background
.nav-bar-light {
  color: $nav-bar-light-color;

  .nav-bar-brand {
    color: $nav-bar-light-brand-color;
  }

  .nav-bar-divider-prepend::before,
  .nav-bar-divider-append::after {
    background-color: $nav-bar-light-color;
  }

  .nav-bar-nav,
  .nav {
    border-bottom: 1px solid $nav-bar-light-border-color;
  }

  .nav-bar-collapse {
    background-color: $nav-bar-light-bg-color;
    border-bottom: 1px solid $nav-bar-light-border-color;
  }

  .nav-item,
  .dropdown {
    border-top: 1px solid $nav-bar-light-border-color;
  }

  .nav-link {
    &.disabled {
      color: $nav-bar-light-disabled-color;
    }
  }

  .nav-link,
  .nav-item {
    &::before {
      background-color: $nav-bar-light-color;
    }
  }

  .dropdown-item {
    border-top: 1px solid $nav-bar-light-border-color;
  }
}

// White links against a dark background
.nav-bar-dark {
  color: $nav-bar-dark-color;

  .nav-bar-brand {
    color: $nav-bar-dark-brand-color;
  }

  .nav-bar-divider-prepend::before,
  .nav-bar-divider-append::after {
    background-color: $nav-bar-dark-color;
  }

  .nav-bar-nav,
  .nav {
    border-bottom: 1px solid $nav-bar-dark-border-color;
  }

  .nav-bar-collapse {
    background-color: $nav-bar-dark-bg-color;
    border-bottom: 1px solid $nav-bar-dark-border-color;
  }

  .nav-item,
  .dropdown {
    border-top: 1px solid $nav-bar-dark-border-color;
  }

  .nav-link {
    &.disabled {
      color: $nav-bar-dark-disabled-color;
    }
  }

  .nav-link,
  .nav-item {
    &::before {
      background-color: $nav-bar-dark-color;
    }
  }

  .dropdown-item {
    border-top: 1px solid $nav-bar-dark-border-color;
  }
}

// Responsive nav bar
//
// Custom styles for responsive collapsing and toggling of nav bar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable nav bar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.nav-bar` parent.
.nav-bar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full nav bars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}

// Button for toggling the nav bar when in its collapsed state
.nav-bar-toggler {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  height: $nav-bar-min-height;
  padding: 0 $nav-bar-toggler-padding-x;
  font-size: $nav-bar-toggler-font-size;
  line-height: $nav-bar-nav-link-line-height;
  background-color: transparent; // remove default button style
  border: $border-width solid transparent; // remove default button style
  color: inherit; // Allow theme to override color

  // If 'position-absolute' util class is added, position on correct side of nav bar
  top: 0;
  @include ltr {
    left: 0;
  }
  @include rtl {
    right: 0;
  }

  &:focus {
    @include vfi-text-color-inset;
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.nav-bar-toggler-icon {
  display: inline-block;
  vertical-align: middle;

  &::before {
    display: block;
    content: $nav-bar-toggler-symbol;
    font-family: $font-family-glyph;
    font-size: 1.25rem;
  }
}

// Generate series of `.nav-bar-expand-*` responsive classes for configuring
// where your nav bar collapses.
.nav-bar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      // Don't generate mobile styles if there is no next breakpoint, i.e. when the current
      // breakpoint we are interating on is `xl`. In this case, we are defining the `.nav-bar-expand`
      // class, which assumes no collapsed state.
      @if ($next != null) {
        @include media-breakpoint-down($breakpoint) {
          padding-bottom: 0;

          > .container,
          > .container-fluid {
            padding: 0;
          }

          .nav-bar-collapse {
            .nav-bar-brand {
              padding: $nav-bar-nav-link-padding-y $nav-bar-nav-link-padding-x;
            }

            .nav-bar-divider-prepend,
            .nav-bar-divider-append {
              margin-left: 0;
              margin-right: 0;
            }
          }

          .dropdown-menu {
            border: none;
            background-color: transparent;
          }

          .dropdown-item {
            border-top: 1px soild inherit;
            padding: $nav-bar-dropdown-item-padding-y $nav-bar-dropdown-item-padding-x;
          }
        }
      }

      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        // For nesting containers, have to redeclare for alignment purposes
        > .container,
        > .container-fluid {
          flex-wrap: nowrap;
        }

        // Adjust padding on links to line up baseline with brand text
        .nav-bar-brand ~ .nav-bar-collapse .nav-link {
          padding-top: $nav-bar-nav-link-padding-top;
          padding-bottom: $nav-bar-nav-link-padding-bottom;
        }

        .nav-bar-nav,
        .nav {
          flex-direction: row;
          border: none;

          .dropdown-menu {
            position: absolute;
          }

          .nav-item,
          .dropdown {
            // Remove borders applied by mobile styles
            border: none;
          }
        }

        .nav-link {
          &.dropdown-toggle::after {
            // Adjust position of caret
            padding-top: abs($nav-bar-nav-link-padding-top - $nav-bar-nav-link-padding-y);
          }
        }

        .nav-link:hover,
        .nav-item.active {
          &::before {
            display: block;
          }
        }

        .nav-bar-divider-prepend::before,
        .nav-bar-divider-append::after {
          display: block;
        }

        .nav-bar-collapse {
          border: none;

          display: flex !important; // stylelint-disable-line declaration-no-important

          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;

          // Changes background of menu back to inherited nav bar background
          background-color: inherit;
        }

        .dropdown-item,
        .nav-bar-nav,
        .nav,
        .nav-item {
          border: none;
        }

        .nav-bar-toggler {
          display: none;
        }
      }
    }

  }
}
