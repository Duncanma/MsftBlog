@import "../../styles/functions";
@import "../../variables";
@import "../../styles/mixins";
@import "../lists/mixins";
@import "mixins";

.pagination {
  display: flex;
  @include list-unstyled;
  font-weight: $font-weight-semibold;
  margin-bottom: 0;
  border-color: $pagination-active-color;

  @include theme-inverse {
    border-color: $pagination-active-color-inverse;
  }

}

.page-link {
  position: relative;
  display: block;
  padding: $pagination-padding-y $pagination-padding-x;
  line-height: $pagination-line-height;
  text-decoration: none;
  border: $btn-border-width solid transparent;
}

.page-item {
  white-space: nowrap;
  border-color: inherit; // inherit up the tree to easily override color with border utils on `.pagination` element

  &:first-child,
  &:last-child {
    display: inline-block;

    .page-link {
      &::before,
      &::after {
        font-family: $font-family-glyph;
        display: inline-block;
        font-size: $glyph-size-xsmall;
        position: absolute;
        top: 50%;
        margin-top: -0.5em;
        @include transition($transition-transform);
      }

      &:hover {
        text-decoration: underline;
      }
    }
  }

  &:first-child {
    .page-link {
      @include ltr {
        padding-left: $btn-glyph-padding-x-condensed;
      }
      @include rtl {
        padding-right: $btn-glyph-padding-x-condensed;
      }

      &::before {
        @include glyph-placement("before");
      }

      &:hover {
        &::before {
          @include ltr {
            transform: translate(-$cta-glyph-transform, 0);
          }
          @include rtl {
            transform: translate($cta-glyph-transform, 0);
          }
        }
      }
    }
  }

  &:last-child {
    .page-link {
      @include ltr {
        padding-right: $btn-glyph-padding-x-condensed;
      }
      @include rtl {
        padding-left: $btn-glyph-padding-x-condensed;
      }

      &::after {
        @include glyph-placement("after");
      }

      &:hover {
        &::after {
          @include ltr {
            transform: translate($cta-glyph-transform, 0);
          }
          @include rtl {
            transform: translate(-$cta-glyph-transform, 0);
          }
        }
      }
    }
  }

  &.active {
    display: inline-block;
    position: relative;

    &::after {
      content: "";
      display: block;
      width: 1.5em;
      border-top-width: 2px;
      border-top-style: solid;
      border-color: inherit;
      margin: -0.375rem auto;
    }

    .page-link {
      // allow color to inherit body text color
      color: inherit;
      cursor: default;
    }
  }

  &.disabled .page-link {
    color: $pagination-disabled-color;
    pointer-events: none;

    @include theme-inverse {
      color: $pagination-disabled-color-inverse;
    }
  }
}

// note: not using media-breakpoint-* mixins as the values returned and styles being set are not consistent
// vp3 - 860px+
@media screen and (min-width: map-get($grid-breakpoints, "md")) {
  @include pagination-segment-start(6, "md");
}

// vp2 to vp3 - 540px to 860px
// media-breakpoint-between returns an incorrect value (around 1086px) for 'md' breakpoint as an upper variant
@media screen and (min-width: map-get($grid-breakpoints, "sm")) and (max-width: map-get($grid-breakpoints, "md")) {
  @include pagination-segment-start(4, "sm");
  @include pagination-segment-end(4);
  @include pagination-segment-middle;
}

// vp1 - 0 to 539px
@media screen and (max-width: map-get($grid-breakpoints, "sm")) {
  .page-item {
    &:not(.active):not(:first-child):not(:last-child) {
      display: none;
    }
  }
}
