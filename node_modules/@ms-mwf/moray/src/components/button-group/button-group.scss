@import "../../styles/functions";
@import "../../variables";
@import "../../styles/mixins";
@import "../button/button";

// stylelint-disable selector-no-qualifying-type

// Make the div behave like a button
.btn-group,
.btn-group-vertical {
  position: relative;
  display: inline-flex;
  vertical-align: middle; // match .btn alignment given font-size hack above

  > .btn {
    position: relative;
    flex: 0 1 auto;

    // Bring the hover, focused, and "active" buttons to the front to overlay
    // the borders properly
    @include hover {
      z-index: 1;
    }
    &:focus,
    &.focus,
    &:active,
    &.active {
      z-index: 1;
    }
  }

}

.btn-group {

  // Remove borders between buttons

  > .btn:not(:first-of-type) {
    @include ltr {
      border-left-width: 0;
      padding-left: #{$btn-padding-x + $btn-focus-border-width};
    }
    @include rtl {
      border-right-width: 0;
      padding-right: #{$btn-padding-x + $btn-focus-border-width};
    }
  }

  > .btn:not(:last-of-type) {
    @include ltr {
      border-right-width: 0;
      padding-right: #{$btn-padding-x + $btn-focus-border-width};
    }
    @include rtl {
      border-left-width: 0;
      padding-left: #{$btn-padding-x + $btn-focus-border-width};
    }
  }

  // Hide double borders

  .btn-group + .btn-group,
  .btn-group + .btn:first-of-type,
  .btn:last-of-type + .btn-group {
    @include ltr {
      margin-left: -1px;
    }
    @include rtl {
      margin-right: -1px;
    }
  }

  // Reset rounded corners

  > .btn:not(:last-of-type),
  > .btn-group:not(:last-child) > .btn {
    @include ltr {
      @include border-right-radius(0);
    }
    @include rtl {
      @include border-left-radius(0);
    }
  }

  > .btn:not(:first-child),
  > .btn-group:not(:first-child) > .btn {
    @include ltr {
      @include border-left-radius(0);
    }
    @include rtl {
      @include border-right-radius(0);
    }
  }
}

// Optional: Group multiple button groups together for a toolbar
.btn-toolbar {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  .input-group {
    width: auto;
  }
}

// Sizing
//
// Remix the default button sizing classes into new ones for easier manipulation.

.btn-group-sm > .btn { @extend .btn-sm; }
.btn-group-lg > .btn { @extend .btn-lg; }


//
// Vertical button groups
//

.btn-group-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  .btn,
  .btn-group {
    width: 100%;
  }

  > .btn + .btn,
  > .btn + .btn-group,
  > .btn-group + .btn,
  > .btn-group + .btn-group {
    margin-top: -$btn-border-width;
  }

  // Reset rounded corners
  > .btn:not(:last-child):not(.dropdown-toggle),
  > .btn-group:not(:last-child) > .btn {
    @include border-bottom-radius(0);
  }

  > .btn:not(:first-child),
  > .btn-group:not(:first-child) > .btn {
    @include border-top-radius(0);
  }
}

// Checkbox and radio options
//
// In order to support the browser's form validation feedback, powered by the
// `required` attribute, we have to "hide" the inputs via `clip`. We cannot use
// `display: none;` or `visibility: hidden;` as that also hides the popover.
// Simply visually hiding the inputs via `opacity` would leave them clickable in
// certain cases which is prevented by using `clip` and `pointer-events`.
// This way, we ensure a DOM element is visible to position the popover from.
//
// See https://github.com/twbs/bootstrap/pull/12794 and
// https://github.com/twbs/bootstrap/pull/14559 for more information.

.btn-group-toggle {
  > .btn,
  > .btn-group > .btn {
    margin-bottom: 0; // Override default `<label>` value

    input[type="radio"],
    input[type="checkbox"] {
      position: absolute;
      clip: rect(0, 0, 0, 0);
      pointer-events: none;
    }
  }
}

// Visual divider for buttons without using borders

.btn-group-divider-prepend,
.btn-group-divider-append {
  position: relative;
}

%btn-group-divider {
  display: block;
  position: absolute;
  width: $btn-border-width;
  border-left-width: 1px;
  border-left-style: solid;
  top: 20%;
  margin-top: 0;
  height: 60%;
  content: "";
}

.btn-group-divider-prepend {
  &::before {
    @extend %btn-group-divider;
    @include ltr {
      left: 0;
    }
    @include rtl {
      right: 0;
    }
  }
}

.btn-group-divider-append {
  &::after {
    @extend %btn-group-divider;
    @include ltr {
      right: 0;
    }
    @include rtl {
      left: 0;
    }
  }
}
