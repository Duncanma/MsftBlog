@import "../../styles/functions";
@import "../../variables";
@import "../../styles/mixins";

// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  > .form-control,
  > .custom-select,
  > .custom-file {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;
  }

  > :not(:first-child) {
    @include ltr {
      margin-left: -$input-border-width;
    }
    @include rtl {
      margin-right: -$input-border-width;
    }
  }

  // Bring the "active" form control to the top of surrounding elements
  > .form-control:focus,
  > .custom-select:focus,
  > .custom-file .custom-file-input:focus ~ .custom-file-label,
  > .custom-file .custom-file-input:focus-within ~ .custom-file-label {
    z-index: 3;
  }

  // Bring the custom file input above the label
  > .custom-file .custom-file-input:focus,
  > .custom-file .custom-file-input:focus-within {
    z-index: 4;
  }
}


// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-group-prepend,
.input-group-append {
  display: flex;

  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-group-text` since it shares the same border-color
  // as our inputs.
  .btn,
  .input-group-text {
    position: relative;
    z-index: 2;
  }

  .btn {
    @include hover-focus {
      z-index: 3;
    }
  }
}

.input-group-prepend {
  // remove border radius on last button
  // account for dropdown menu when selecting child elements
  > .btn:last-of-type {
    @include ltr {
      @include border-right-radius(0);
    }
    @include rtl {
      @include border-left-radius(0);
    }
  }

  .btn-group:last-child > .btn:last-of-type {
    @include ltr {
      @include border-right-radius(0);
    }
    @include rtl {
      @include border-left-radius(0);
    }
  }
}

.input-group-append {
  // remove border radius on first button
  > .btn:first-child {
    @include ltr {
      @include border-left-radius(0);
    }
    @include rtl {
      @include border-right-radius(0);
    }
  }

  .btn-group:first-child > .btn:first-child {
    @include ltr {
      @include border-left-radius(0);
    }
    @include rtl {
      @include border-right-radius(0);
    }
  }
}


// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.input-group-text {
  display: flex;
  align-items: center;
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  font-size: $font-size-base; // Match inputs
  font-weight: $font-weight-normal;
  line-height: $input-btn-line-height;
  color: $input-group-addon-color;
  text-align: center;
  white-space: nowrap;

  @include theme-inverse {
    color: $input-group-addon-color-inverse;
  }
}


// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg > .form-control,
.input-group-lg > .input-group-prepend > .input-group-text,
.input-group-lg > .input-group-append > .input-group-text,
.input-group-lg > .input-group-prepend > .btn,
.input-group-lg > .input-group-append > .btn {
  height: $input-height-lg;
  padding: $input-padding-y-lg $input-padding-x-lg;
  font-size: $font-size-lg;
  line-height: $input-line-height-lg;
}

.input-group-sm > .form-control,
.input-group-sm > .input-group-prepend > .input-group-text,
.input-group-sm > .input-group-append > .input-group-text,
.input-group-sm > .input-group-prepend > .btn,
.input-group-sm > .input-group-append > .btn {
  height: $input-height-sm;
  padding: $input-padding-y-sm $input-padding-x-sm;
  font-size: $font-size-sm;
  line-height: $input-line-height-sm;
}
