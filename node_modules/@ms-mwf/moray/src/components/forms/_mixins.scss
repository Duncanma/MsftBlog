@mixin form-validation-state($state, $color, $icon) {
  $state-box-shadow: 0 0 0 $input-border-width $color;
  $state-box-shadow-check: 0 0 0 ($input-border-width / 2) $color, inset 0 0 0 $input-border-width $body-bg;
  $state-box-shadow-check-inverse: 0 0 0 ($input-border-width / 2) $color, inset 0 0 0 $input-border-width $body-bg-inverse;
  $glyph-font-size: $glyph-size-small;

  .#{$state}-feedback,
  .#{$state}-tooltip {
    width: 100%;
    color: $color;
    position: relative;

    @include ltr {
      padding-left: 1.5rem;
    }

    @include rtl {
      padding-right: 1.5rem;
    }

    &::before {
      font-family: $font-family-glyph;
      font-weight: 400;
      font-size: $glyph-font-size;
      position: absolute;
      top: 0;

      @include ltr {
        left: 0;
      }

      @include rtl {
        right: 0;
      }
    }
  }

  .form-control {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;
      box-shadow: $state-box-shadow;
    }
  }

  .#{$state}-feedback.is-#{$state} {
    padding-top: ($glyph-font-size - $font-size-base) / 2;
    &::before {
      content: $icon;
    }
  }

  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state},
    .custom-select-input.is-#{$state} {
      border-color: $color;
      box-shadow: $state-box-shadow;
    }
  }

  .form-check-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;
      box-shadow: $state-box-shadow-check;

      @include theme-inverse {
        box-shadow: $state-box-shadow-check-inverse;
      }

      // intentionally separate rule for ie11 with same styles
      // other browsers consider ::-ms-check an invalid selector and ignore entire rule if grouped
      &::-ms-check {
        border-color: $color;
        box-shadow: $state-box-shadow-check;

        @include theme-inverse {
          box-shadow: $state-box-shadow-check-inverse;
        }
      }
    }

    &[type="checkbox"]:checked,
    &[type="radio"]:checked {
      .was-validated &:#{$state},
      &.is-#{$state} {
        border-color: $color;
      }
    }
  }

  .custom-control-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-control-label {
        &::before {
          border-color: $color;
          box-shadow: $state-box-shadow-check;

          @include theme-inverse {
            box-shadow: $state-box-shadow-check-inverse;
          }
        }
      }

      &:checked {
        ~ .custom-control-label::before {
          border-color: $color;
        }
      }

      &:focus {
        ~ .custom-control-label::before {
          box-shadow: $state-box-shadow;
        }

        &:not(:checked) ~ .custom-control-label::before {
          border-color: $color;
        }
      }
    }
  }

  .custom-checkbox,
  .custom-radio {
    .custom-control-input {
      .was-validated &:#{$state},
      &.is-#{$state} {
        &:checked {
          ~ .custom-control-label::before {
            border-color: $color;
          }
        }
      }
    }
  }

  // custom file
  .custom-file-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-file-label {
        border-color: $color;
      }

      &:focus {
        ~ .custom-file-label {
          box-shadow: $state-box-shadow;
        }
      }
    }
  }
}

@mixin form-check-input-focus {
  outline: $form-check-input-outline;
  outline-offset: $form-check-input-outline-offset;
}

// Form control focus state
@mixin form-control-focus() {
  &:focus {
    outline: $input-outline;
    outline-offset: $input-outline-offset;
  }
}
