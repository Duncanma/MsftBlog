@import "../../../styles/functions";
@import "../../../variables";
@import "../../../styles/mixins";
@import "../mixins";

// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.

.custom-control-input {
  position: absolute;
  z-index: -1; // Put the input behind the label so it doesn't overlay text
  opacity: 0;

  &.disabled ~ .custom-control-label,
  &:disabled ~ .custom-control-label {
    opacity: $form-check-label-disabled-opacity;

    &::before {
      @include theme-inverse {
        border-color: $form-check-input-disabled-color-inverse;
      }
    }
  }

  &.disabled:checked ~ .custom-control-label::before,
  &:disabled:checked ~ .custom-control-label::before {
    opacity: $form-check-input-disabled-checked-opacity / $form-check-label-disabled-checked-opacity;
  }
}

// Custom control indicators
//
// Build the custom controls out of pseudo-elements.

.custom-control-label {
  position: relative;
  margin-bottom: 0;

  // Background-color and (when enabled) gradient
  &::before {
    pointer-events: none;
    border: $input-border-width solid $input-border-color;
    @include transition($custom-forms-transition);
    background-color: $body-bg;

    @include theme-inverse {
      background-color: $body-bg-inverse;
    }
  }

  // Foreground icon or indicator
  .custom-control-glyph::before {
    background-repeat: no-repeat;
    background-position: center center;
    background-size: $custom-control-indicator-bg-size;
    // invisible border to make background image the correct size
    border: $input-border-width solid transparent;
    background-clip: content-box;
    font-family: $font-family-glyph;
    line-height: 1;
  }

  // match size and positioning
  &::before,
  .custom-control-glyph::before {
    content: "";
    position: absolute;
    display: block;
    top: $custom-control-spacer-y;
    width: $custom-control-indicator-size;
    height: $custom-control-indicator-size;

    @include ltr {
      left: -$custom-control-gutter;
    }
    @include rtl {
      right: -$custom-control-gutter;
    }
  }
}

// Add padding for positioning of indicators

.custom-checkbox,
.custom-radio {
  @include ltr {
    padding-left: $custom-control-gutter;
  }
  @include rtl {
    padding-right: $custom-control-gutter;
  }
}

// Add space between `form-check`s in a `form-group`
.form-group {
  .custom-checkbox ~ .custom-checkbox:not(.custom-control-inline),
  .custom-radio ~ .custom-radio:not(.custom-control-inline) {
    margin-top: map-get($spacers, g);
  }

  .custom-checkbox.custom-control-inline,
  .custom-radio.custom-control-inline {
    margin-bottom: map-get($spacers, g);
  }
}


// Checkboxes
//
// Tweak just a few things for checkboxes.

.custom-checkbox {
  .custom-control-label::before {
    border-radius: $form-check-input-border-radius;
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::before {
      border-color: transparent;
      background-color: $component-active-bg;

      @include theme-inverse {
        background-color: $component-active-bg-inverse;
      }
    }

    .custom-control-glyph::before {
      content: $custom-checkbox-indicator-icon-checked;
      color: color-yiq($component-active-bg);

      @include theme-inverse {
        color: color-yiq($component-active-bg-inverse);
      }
    }
  }

  .custom-control-input:indeterminate ~ .custom-control-label {
    &::before {
      border-color: transparent;
      background-color: $custom-checkbox-indicator-indeterminate-bg;
    }

    .custom-control-glyph::before {
      background-image: $custom-checkbox-indicator-icon-indeterminate;
    }
  }

  .custom-control-input.disabled:checked ~ .custom-control-label,
  .custom-control-input:disabled:checked ~ .custom-control-label {
    &::before {
      background: $form-check-input-disabled-checked-color;

      @include theme-inverse {
        background: $form-check-input-disabled-checked-color-inverse;
      }
    }
  }

  .custom-control-input:focus {
    ~ .custom-control-label::before {
      @include form-check-input-focus;
    }
  }
}

// Radios
//
// Tweak just a few things for radios.

.custom-radio {
  .custom-control-label::before {
    border-radius: $custom-radio-indicator-border-radius;
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::before {
      border-color: $custom-control-indicator-checked-bg;
    }

    .custom-control-glyph::before {
      content: "";
      border-width: $custom-radio-indicator-border-width;
      border-style: solid;
      border-radius: $custom-radio-indicator-border-radius;
      border-color: $component-active-bg;
      height: $custom-radio-indicator-size;
      width: $custom-radio-indicator-size;
      // Adjust glyph size for larger space between glyph and border
      $custom-radio-glyph-adjust: 0.125rem;
      font-size: $font-size-base - $custom-radio-glyph-adjust;
      top: $custom-radio-indicator-position-y;
      color: $component-active-bg;

      @include theme-inverse {
        color: $component-active-bg-inverse;
        border-color: $component-active-bg-inverse;
      }

      @include ltr {
        left: -$custom-radio-indicator-position-x;
      }
      @include rtl {
        right: -$custom-radio-indicator-position-x;
      }
    }
  }

  .custom-control-input {
    &.disabled,
    &:disabled {
      &:checked ~ .custom-control-label {
        &::before {
          border-color: $form-check-input-disabled-checked-color;

          @include theme-inverse {
            border-color: $form-check-input-disabled-checked-color-inverse;
          }
        }

        // stylelint-disable-next-line selector-max-class
        .custom-control-glyph::before {
          opacity: $form-check-input-disabled-checked-opacity / $form-check-label-disabled-checked-opacity;
          border-color: $form-check-input-disabled-checked-color;

          @include theme-inverse {
            border-color: $form-check-input-disabled-checked-color-inverse;
          }
        }
      }
    }
  }

  .custom-control-input:focus ~ .custom-control-label::before {
    @include form-check-input-focus;
  }
}
