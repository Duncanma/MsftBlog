@import "../../styles/functions";
@import "../../variables";
@import "../../styles/mixins";

// Base class
.tooltip {
  position: absolute;
  top: 0;
  left: 0;
  display: none;
  z-index: $zindex-popover;
  max-width: $tooltip-max-width;
  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
  // So reset our font and text properties to avoid inheriting weird values.
  @include reset-text;
  font-size: $tooltip-font-size;
  // Allow breaking very long words so they don't overflow the popover's bounds
  word-wrap: break-word;
  background-color: $tooltip-bg;
  color: color-yiq($tooltip-bg);
  box-shadow: $tooltip-box-shadow;
  border: $tooltip-border-width solid $tooltip-border-color;

  @include theme-inverse {
    background-color: $tooltip-bg-inverse;
    color: color-yiq($tooltip-bg-inverse);
  }

  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes fade-out {
    from { opacity: 1; }
    to { opacity: 0; }
  }

  &.show {
    display: block;

    &.fade {
      animation: $tooltip-animation-duration $tooltip-animation-timing-fn fade-in;
    }
  }

  &.fading-out {
    display: block;
    animation: $tooltip-animation-duration $tooltip-animation-timing-fn fade-out;
  }

  .arrow {
    position: absolute;
    display: block;
    width: $tooltip-arrow-size;
    height: $tooltip-arrow-size;
    background-color: $tooltip-border-color;
    // Since there isn't any real content in the arrow
    // let's normalize the rotation axis with LTR
    direction: ltr;
    transform-origin: center;

    &::after {
      display: block;
      content: "";
      width: 100%;
      height: 100%;
      margin: $tooltip-border-width;
      background-color: $tooltip-bg;

      @include theme-inverse {
        background-color: $tooltip-bg-inverse;
      }
    }
  }

  .arrow-wrapper {
    position: absolute;
  }

  $arrow-offset: $tooltip-arrow-size / 2 - $tooltip-border-width;

  &.flyout-top,
  &.flyout-bottom {
    .arrow-wrapper {
      width: 100%;
    }
  }

  &.flyout-top {
    .arrow {
      top: calc(100% - #{$arrow-offset});
      transform: rotate(-135deg);
    }

    .arrow-wrapper {
      top: 100%;

      .arrow {
        top: -$arrow-offset;
      }
    }
  }

  &.flyout-bottom {
    .arrow {
      bottom: calc(100% - #{$arrow-offset});
      transform: rotate(45deg);
    }

    .arrow-wrapper {
      bottom: 100%;

      .arrow {
        bottom: -$arrow-offset;
      }
    }
  }

  &.flyout-right,
  &.flyout-left {
    .arrow-wrapper {
      top: 0;
      height: 100%;
    }

    &.flyout-align-end {
      .arrow-wrapper {
        top: auto;
        bottom: 0;
      }
    }
  }

  &.flyout-right {
    .arrow {
      right: calc(100% - #{$arrow-offset});
      transform: rotate(-45deg);
    }

    .arrow-wrapper {
      right: 100%;

      .arrow {
        right: -$arrow-offset;
      }
    }
  }

  &.flyout-left {
    .arrow {
      left: calc(100% - #{$arrow-offset});
      transform: rotate(135deg);
    }

    .arrow-wrapper {
      left: 100%;

      .arrow {
        left: -$arrow-offset;
      }
    }
  }
}

// Wrapper for the tooltip content
.tooltip-inner {
  padding: $tooltip-body-padding-y $tooltip-body-padding-x;
}
